# Generated by Django 5.2.4 on 2025-07-30 08:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('nickname', models.CharField(blank=True, max_length=150, verbose_name='昵称')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='api_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='api_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BillingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_name', models.CharField(max_length=255, verbose_name='机构名称')),
                ('tax_id', models.CharField(max_length=100, verbose_name='纳税识别号')),
                ('address', models.CharField(max_length=255, verbose_name='地址')),
                ('phone', models.CharField(max_length=20, verbose_name='电话')),
                ('bank_name', models.CharField(max_length=100, verbose_name='开户行')),
                ('bank_account', models.CharField(max_length=100, verbose_name='账号')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billing_infos', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='姓名')),
                ('education_experience', models.TextField(blank=True, verbose_name='教育经历')),
                ('research_field', models.CharField(blank=True, max_length=255, verbose_name='研究领域')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='所在地')),
                ('institution', models.CharField(blank=True, max_length=255, verbose_name='所在机构')),
                ('department', models.CharField(blank=True, max_length=255, verbose_name='所在部门')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='职称')),
                ('receive_review_invitations', models.BooleanField(default=False, verbose_name='同意收到审稿邀请')),
                ('receive_guidance_invitations', models.BooleanField(default=False, verbose_name='同意收到科研辅导邀请')),
                ('receive_cooperation_invitations', models.BooleanField(default=False, verbose_name='同意收到科研合作邀请')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
        ),
    ]
