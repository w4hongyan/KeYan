# Generated by Django 5.2.4 on 2025-07-31 13:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CooperationPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('cooperation_type', models.CharField(choices=[('mutual', '互助'), ('collab', '合作')], max_length=10)),
                ('requirements', models.JSONField(default=dict, help_text='结构化需求描述')),
                ('reward_description', models.TextField(help_text='酬劳或合作条件')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('required_skills', models.JSONField(default=list, help_text='所需技能列表')),
                ('difficulty_level', models.CharField(choices=[('beginner', '初级'), ('intermediate', '中级'), ('advanced', '高级'), ('expert', '专家')], default='intermediate', max_length=20)),
                ('status', models.CharField(choices=[('pending', '待接单'), ('progress', '进行中'), ('completed', '已完成'), ('cancelled', '已取消')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('expected_duration', models.PositiveIntegerField(blank=True, help_text='预期完成时间（小时）', null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('application_count', models.PositiveIntegerField(default=0)),
                ('tags', models.JSONField(default=list, help_text='项目标签')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cooperation_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CooperationApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField(help_text='申请说明')),
                ('proposed_solution', models.TextField(help_text='解决方案')),
                ('proposed_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('portfolio_url', models.URLField(blank=True, help_text='作品集链接', null=True)),
                ('relevant_experience', models.TextField(blank=True, help_text='相关经验', null=True)),
                ('estimated_duration', models.PositiveIntegerField(blank=True, help_text='预计完成时间（小时）', null=True)),
                ('available_start_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', '待审核'), ('accepted', '已接受'), ('rejected', '已拒绝'), ('cancelled', '已取消')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_note', models.TextField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cooperation_applications', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='cooperation.cooperationpost')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CooperationProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percentage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('description', models.TextField()),
                ('deliverables', models.JSONField(default=list, help_text='交付文件列表')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cooperation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_updates', to='cooperation.cooperationpost')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CooperationReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('communication_rating', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('quality_rating', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('timeliness_rating', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cooperation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='cooperation.cooperationpost')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.CharField(choices=[('beginner', '初级'), ('intermediate', '中级'), ('advanced', '高级'), ('expert', '专家')], default='beginner', max_length=20)),
                ('verified', models.BooleanField(default=False)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cooperation.skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='cooperationpost',
            index=models.Index(fields=['publisher', 'created_at'], name='cooperation_publish_2e72a0_idx'),
        ),
        migrations.AddIndex(
            model_name='cooperationpost',
            index=models.Index(fields=['cooperation_type', 'status'], name='cooperation_coopera_ee80e4_idx'),
        ),
        migrations.AddIndex(
            model_name='cooperationpost',
            index=models.Index(fields=['created_at'], name='cooperation_created_2e3474_idx'),
        ),
        migrations.AddIndex(
            model_name='cooperationapplication',
            index=models.Index(fields=['post', 'status'], name='cooperation_post_id_1eb450_idx'),
        ),
        migrations.AddIndex(
            model_name='cooperationapplication',
            index=models.Index(fields=['applicant', 'created_at'], name='cooperation_applica_96650e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cooperationapplication',
            unique_together={('post', 'applicant')},
        ),
        migrations.AddIndex(
            model_name='cooperationprogress',
            index=models.Index(fields=['cooperation', 'created_at'], name='cooperation_coopera_6e83f0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userskill',
            unique_together={('user', 'skill')},
        ),
    ]
